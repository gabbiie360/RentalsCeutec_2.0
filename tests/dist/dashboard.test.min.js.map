{"version":3,"sources":["dashboard.test.js"],"names":["require","actualizarRol","eliminarUsuario","editarVehiculo","guardarVehiculo","eliminarVehiculo","editarReserva","guardarReserva","eliminarReserva","describe","value","uid","expect","resultado","toEqual","rol","mensaje","test","confirm","jest","fn","dataset","toHaveProperty","MARCA","MODELO","PLACA","datos","toThrow","global","id","Nombre Completo","Email","Numero de Telefono"],"mappings":"0BAA8IA,QAAQ,8BAA9IC,uBAAAA,cAAeC,yBAAAA,gBAAiBC,wBAAAA,eAAgBC,yBAAAA,gBAAiBC,0BAAAA,iBAAkBC,uBAAAA,cAAeC,wBAAAA,eAAgBC,yBAAAA,gBAE1HC,SAAS,iCAF6I,WAA9IR,KAAAA,0CAG4C,WAHZE,IAAmDG,EAQjEL,cAHH,CAAES,MALeP,QAAAA,QAKU,CAAEQ,IAAK,aAMjDC,OAAOC,GAAWC,QAAQ,CAAEH,IAAK,UAAWI,IAAK,QAASC,QAAS,qCAPnEC,KAAA,8BAAA,WACiBP,OAAOQ,QAATC,KAAAC,GAAA,WAAA,OAAA,IAAkBC,IAAOV,EAAE,UAE1CE,EAAAX,gBAAAS,GAgBAC,OAAOC,GAAWC,QAAQ,CAAEH,IAAAA,EAAKK,QAAS,uCAZED,KAAG,kDAArB,WAA1B,IAIAF,EAAAV,eAJA,aAKAS,OAAAC,GAAAS,eAAA,QAAA,UACMX,OAAME,GAEZS,eAAA,SAAA,WAiBAV,OAAOC,GAAWS,eAAe,QAAS,aAb1CV,KAAAA,4CAA0B,WAAOI,IAGhCH,EAAAT,gBAHyC,CAAAmB,MAAA,SAAAC,OAAA,UAAAC,MAAA,YAwB1Cb,OAAOC,GAAWS,eAAe,UAAW,sCAb5CV,KAAAA,iEAAA,WAEAA,IAAOC,EAAWS,CAAAA,MAAAA,SAAeE,OAAS,WAI1CZ,OAAA,WAAA,OAAAR,gBAAAsB,KAAAC,QAAA,qDACiCH,KAAAA,+BAAnB,WAEdI,OAAAV,QAAAC,KAAAC,GAAA,WAAA,OAAA,IAkBA,IAAMS,EAAK,cAdJhB,EAAWS,iBAAeO,GAIjCjB,OAAAC,GAAAC,QAAA,CAAAe,GAAAA,EAAAb,QAAA,wCACiCQ,KAAAA,kDAAQ,WAEzC,IACapB,EAAAA,cADb,YAICQ,OAAAC,GAAAS,eAAgC,kBAAM,cACvCV,OAAAC,GAAAS,eAAA,QAAA,4BACyBL,KAAzB,4CAAA,WAwBA,IAjBOJ,EAAWC,eAiBJ,CAAEgB,kBAAmB,aAAcC,MAAO,yBAA0BC,qBAAsB,aAjBxGpB,OAAAC,GAAAS,eAAA,UAAA,qCAIAL,KAAA,iEAAA,WAwBA,IAAMS,EAAQ,CAAEI,kBAAmB,aAAcC,MAAO,0BAjBxDnB,OAAOC,WAAAA,OAAPN,eAAAmB,KAAiCC,QAAA,wCAIrCV,KAAK,+BAAA,WAEKS,OAAKR,QAAGC,KAAAC,GAAA,WAAA,OAAA,IAAE,IAAAS,EAAA,aAEhBhB,EAAAL,gBAAAqB,GAwBAjB,OAAOC,GAAWC,QAAQ,CAAEe,GAAAA,EAAIb,QAAS","file":"dashboard.test.min.js","sourcesContent":["const { actualizarRol, eliminarUsuario, editarVehiculo, guardarVehiculo, eliminarVehiculo, editarReserva, guardarReserva, eliminarReserva } = require(\"../assets/js/dashboardTest\");\r\n\r\ndescribe(\"Pruebas unitarias de dashboard\", () => {\r\n    test(\"Debería actualizar el rol de un usuario\", () => {\r\n        // Arrange\r\n        const select = { value: \"admin\", dataset: { uid: \"user123\" } };\r\n        \r\n        // Act\r\n        const resultado = actualizarRol(select);\r\n        \r\n        // Assert\r\n        expect(resultado).toEqual({ uid: \"user123\", rol: \"admin\", mensaje: \"Rol actualizado correctamente.\" });\r\n    });\r\n\r\n    test(\"Debería eliminar un usuario\", () => {\r\n        // Arrange\r\n        global.confirm = jest.fn(() => true);\r\n        const uid = \"user123\";\r\n        \r\n        // Act\r\n        const resultado = eliminarUsuario(uid);\r\n        \r\n        // Assert\r\n        expect(resultado).toEqual({ uid, mensaje: \"Usuario eliminado correctamente.\" });\r\n    });\r\n\r\n    test(\"Debería editar un vehículo y devolver sus datos\", () => {\r\n        // Arrange\r\n        const id = \"vehiculo1\";\r\n        \r\n        // Act\r\n        const resultado = editarVehiculo(id);\r\n        \r\n        // Assert\r\n        expect(resultado).toHaveProperty(\"MARCA\", \"Toyota\");\r\n        expect(resultado).toHaveProperty(\"MODELO\", \"Corolla\");\r\n        expect(resultado).toHaveProperty(\"PLACA\", \"ABC-123\");\r\n    });\r\n\r\n    test(\"Debería guardar un vehículo correctamente\", () => {\r\n        // Arrange\r\n        const datos = { MARCA: \"Toyota\", MODELO: \"Corolla\", PLACA: \"ABC-123\" };\r\n        \r\n        // Act\r\n        const resultado = guardarVehiculo(datos);\r\n        \r\n        // Assert\r\n        expect(resultado).toHaveProperty(\"mensaje\", \"Vehículo guardado correctamente.\");\r\n    });\r\n\r\n    test(\"Debería lanzar un error si faltan datos al guardar un vehículo\", () => {\r\n        // Arrange\r\n        const datos = { MARCA: \"Toyota\", MODELO: \"Corolla\" }; // Falta la placa\r\n        \r\n        // Act & Assert\r\n        expect(() => guardarVehiculo(datos)).toThrow(\"Todos los campos del vehículo son obligatorios.\");\r\n    });\r\n\r\n    test(\"Debería eliminar un vehículo\", () => {\r\n        // Arrange\r\n        global.confirm = jest.fn(() => true);\r\n        const id = \"vehiculo123\";\r\n        \r\n        // Act\r\n        const resultado = eliminarVehiculo(id);\r\n        \r\n        // Assert\r\n        expect(resultado).toEqual({ id, mensaje: \"Vehículo eliminado correctamente.\" });\r\n    });\r\n\r\n    test(\"Debería editar una reserva y devolver sus datos\", () => {\r\n        // Arrange\r\n        const id = \"reserva1\";\r\n        \r\n        // Act\r\n        const resultado = editarReserva(id);\r\n        \r\n        // Assert\r\n        expect(resultado).toHaveProperty(\"Nombre Completo\", \"Juan Pérez\");\r\n        expect(resultado).toHaveProperty(\"Email\", \"juan.perez@example.com\");\r\n    });\r\n\r\n    test(\"Debería guardar una reserva correctamente\", () => {\r\n        // Arrange\r\n        const datos = { \"Nombre Completo\": \"Juan Pérez\", Email: \"juan.perez@example.com\", \"Numero de Telefono\": \"12345678\" };\r\n        \r\n        // Act\r\n        const resultado = guardarReserva(datos);\r\n        \r\n        // Assert\r\n        expect(resultado).toHaveProperty(\"mensaje\", \"Reserva guardada correctamente.\");\r\n    });\r\n\r\n    test(\"Debería lanzar un error si faltan datos al guardar una reserva\", () => {\r\n        // Arrange\r\n        const datos = { \"Nombre Completo\": \"Juan Pérez\", Email: \"juan.perez@example.com\" }; // Falta el teléfono\r\n        \r\n        // Act & Assert\r\n        expect(() => guardarReserva(datos)).toThrow(\"Todos los campos son obligatorios.\");\r\n    });\r\n\r\n    test(\"Debería eliminar una reserva\", () => {\r\n        // Arrange\r\n        global.confirm = jest.fn(() => true);\r\n        const id = \"reserva123\";\r\n        \r\n        // Act\r\n        const resultado = eliminarReserva(id);\r\n        \r\n        // Assert\r\n        expect(resultado).toEqual({ id, mensaje: \"Reserva eliminada correctamente.\" });\r\n    });\r\n});"]}