{"version":3,"sources":["login.test.js"],"names":["require","obtenerRol","signInWithEmail","describe","test","uid","rol","expect","toBe","toBeNull","email","password","result","toEqual","user","toThrow","redireccion"],"mappings":";;eAAwCA,OAAO,CAAC,wBAAD,C;IAAvCC,U,YAAAA,U;IAAYC,e,YAAAA,e,EAAwD;;;AAG5EC,QAAQ,CAAC,oCAAD,EAAuC,YAAM;AACjDC,EAAAA,IAAI,CAAC,sDAAD,EAAyD,YAAM;AAE/D,QAAMC,GAAG,GAAG,OAAZ;AAGA,QAAMC,GAAG,GAAGL,UAAU,CAACI,GAAD,CAAtB;AAGAE,IAAAA,MAAM,CAACD,GAAD,CAAN,CAAYE,IAAZ,CAAiB,OAAjB;AACH,GATG,CAAJ;AAWAJ,EAAAA,IAAI,CAAC,oDAAD,EAAuD,YAAM;AAE7D,QAAMC,GAAG,GAAG,MAAZ;AAGA,QAAMC,GAAG,GAAGL,UAAU,CAACI,GAAD,CAAtB;AAGAE,IAAAA,MAAM,CAACD,GAAD,CAAN,CAAYE,IAAZ,CAAiB,MAAjB;AACH,GATG,CAAJ;AAWAJ,EAAAA,IAAI,CAAC,iDAAD,EAAoD,YAAM;AAE1D,QAAMC,GAAG,GAAG,aAAZ;AAGA,QAAMC,GAAG,GAAGL,UAAU,CAACI,GAAD,CAAtB;AAGAE,IAAAA,MAAM,CAACD,GAAD,CAAN,CAAYG,QAAZ;AACH,GATG,CAAJ;AAWAL,EAAAA,IAAI,CAAC,2DAAD,EAA8D,YAAM;AAEpE,QAAMM,KAAK,GAAG,mBAAd;AACA,QAAMC,QAAQ,GAAG,UAAjB;AAGA,QAAMC,MAAM,GAAGV,eAAe,CAACQ,KAAD,EAAQC,QAAR,CAA9B;AAGAJ,IAAAA,MAAM,CAACK,MAAD,CAAN,CAAeC,OAAf,CAAuB;AACnBC,MAAAA,IAAI,EAAE;AAAET,QAAAA,GAAG,EAAE,OAAP;AAAgBK,QAAAA,KAAK,EAAE;AAAvB;AADa,KAAvB;AAGH,GAZG,CAAJ;AAcAN,EAAAA,IAAI,CAAC,2DAAD,EAA8D,YAAM;AAEpE,QAAMM,KAAK,GAAG,kBAAd;AACA,QAAMC,QAAQ,GAAG,SAAjB;AAGA,QAAMC,MAAM,GAAGV,eAAe,CAACQ,KAAD,EAAQC,QAAR,CAA9B;AAGAJ,IAAAA,MAAM,CAACK,MAAD,CAAN,CAAeC,OAAf,CAAuB;AACnBC,MAAAA,IAAI,EAAE;AAAET,QAAAA,GAAG,EAAE,MAAP;AAAeK,QAAAA,KAAK,EAAE;AAAtB;AADa,KAAvB;AAGH,GAZG,CAAJ;AAcAN,EAAAA,IAAI,CAAC,wEAAD,EAA2E,YAAM;AAEjF,QAAMM,KAAK,GAAG,wBAAd;AACA,QAAMC,QAAQ,GAAG,OAAjB;AAGAJ,IAAAA,MAAM,CAAC;AAAA,aAAML,eAAe,CAACQ,KAAD,EAAQC,QAAR,CAArB;AAAA,KAAD,CAAN,CAA+CI,OAA/C,CAAuD,wBAAvD;AACH,GAPG,CAAJ;AASAX,EAAAA,IAAI,CAAC,sDAAD,EAAyD,YAAM;AAE/D,QAAME,GAAG,GAAGL,UAAU,CAAC,OAAD,CAAtB;AAGA,QAAMe,WAAW,GAAGV,GAAG,KAAK,OAAR,GAAkB,gBAAlB,GAAqC,eAAzD;AAGAC,IAAAA,MAAM,CAACS,WAAD,CAAN,CAAoBR,IAApB,CAAyB,gBAAzB;AACH,GATG,CAAJ;AAWAJ,EAAAA,IAAI,CAAC,oDAAD,EAAuD,YAAM;AAE7D,QAAME,GAAG,GAAGL,UAAU,CAAC,MAAD,CAAtB;AAGA,QAAMe,WAAW,GAAGV,GAAG,KAAK,OAAR,GAAkB,gBAAlB,GAAqC,eAAzD;AAGAC,IAAAA,MAAM,CAACS,WAAD,CAAN,CAAoBR,IAApB,CAAyB,eAAzB;AACH,GATG,CAAJ;AAUH,CA5FO,CAAR","sourcesContent":["const { obtenerRol, signInWithEmail } = require(\"../assets/js/loginTest\");  // ✅\r\n\r\n\r\ndescribe(\"Pruebas unitarias de autenticación\", () => {\r\n    test(\"Debería retornar el rol 'admin' para el UID de Maria\", () => {\r\n        \r\n        const uid = \"maria\";\r\n\r\n       \r\n        const rol = obtenerRol(uid);\r\n\r\n        \r\n        expect(rol).toBe(\"admin\");\r\n    });\r\n\r\n    test(\"Debería retornar el rol 'user' para el UID de Juan\", () => {\r\n       \r\n        const uid = \"juan\";\r\n\r\n        \r\n        const rol = obtenerRol(uid);\r\n\r\n     \r\n        expect(rol).toBe(\"user\");\r\n    });\r\n\r\n    test(\"Debería retornar 'null' para un UID desconocido\", () => {\r\n        \r\n        const uid = \"desconocido\";\r\n\r\n        \r\n        const rol = obtenerRol(uid);\r\n\r\n        \r\n        expect(rol).toBeNull();\r\n    });\r\n\r\n    test(\"Debería iniciar sesión correctamente con el usuario admin\", () => {\r\n      \r\n        const email = \"maria@example.com\";\r\n        const password = \"admin123\";\r\n\r\n      \r\n        const result = signInWithEmail(email, password);\r\n\r\n    \r\n        expect(result).toEqual({\r\n            user: { uid: \"maria\", email: \"maria@example.com\" }\r\n        });\r\n    });\r\n\r\n    test(\"Debería iniciar sesión correctamente con el usuario común\", () => {\r\n        \r\n        const email = \"juan@example.com\";\r\n        const password = \"user123\";\r\n\r\n        \r\n        const result = signInWithEmail(email, password);\r\n\r\n        \r\n        expect(result).toEqual({\r\n            user: { uid: \"juan\", email: \"juan@example.com\" }\r\n        });\r\n    });\r\n\r\n    test(\"Debería lanzar un error al iniciar sesión con credenciales incorrectas\", () => {\r\n    \r\n        const email = \"incorrecto@example.com\";\r\n        const password = \"wrong\";\r\n\r\n    \r\n        expect(() => signInWithEmail(email, password)).toThrow(\"Credenciales inválidas\");\r\n    });\r\n\r\n    test(\"Debería devolver 'dashboard.html' si el rol es admin\", () => {\r\n        \r\n        const rol = obtenerRol(\"maria\");\r\n\r\n        \r\n        const redireccion = rol === \"admin\" ? \"dashboard.html\" : \"clientes.html\";\r\n\r\n        \r\n        expect(redireccion).toBe(\"dashboard.html\");\r\n    });\r\n\r\n    test(\"Debería devolver 'clientes.html' si el rol es user\", () => {\r\n       \r\n        const rol = obtenerRol(\"juan\");\r\n\r\n       \r\n        const redireccion = rol === \"admin\" ? \"dashboard.html\" : \"clientes.html\";\r\n\r\n       \r\n        expect(redireccion).toBe(\"clientes.html\");\r\n    });\r\n});\r\n"],"file":"login.test.dev.js"}