"use strict";var _require=require("../assets/js/dashboardTest"),actualizarRol=_require.actualizarRol,eliminarUsuario=_require.eliminarUsuario,editarVehiculo=_require.editarVehiculo,guardarVehiculo=_require.guardarVehiculo,eliminarVehiculo=_require.eliminarVehiculo,editarReserva=_require.editarReserva,guardarReserva=_require.guardarReserva,eliminarReserva=_require.eliminarReserva,validarSolapamiento=_require.validarSolapamiento;describe("Pruebas unitarias de dashboard",function(){test("Debería actualizar el rol de un usuario",function(){var e=actualizarRol({value:"admin",dataset:{uid:"user123"}});expect(e).toEqual({uid:"user123",rol:"admin",mensaje:"Rol actualizado correctamente."})}),test("Debería eliminar un usuario",function(){global.confirm=jest.fn(function(){return!0});var e="user123",a=eliminarUsuario(e);expect(a).toEqual({uid:e,mensaje:"Usuario eliminado correctamente."})}),test("Debería editar un vehículo y devolver sus datos",function(){var e=editarVehiculo("vehiculo1");expect(e).toHaveProperty("MARCA","Toyota"),expect(e).toHaveProperty("MODELO","Corolla"),expect(e).toHaveProperty("PLACA","ABC-123")}),test("Debería guardar un vehículo correctamente",function(){var e=guardarVehiculo({MARCA:"Toyota",MODELO:"Corolla",PLACA:"ABC-123"});expect(e).toHaveProperty("mensaje","Vehículo guardado correctamente.")}),test("Debería lanzar un error si faltan datos al guardar un vehículo",function(){var e={MARCA:"Toyota",MODELO:"Corolla"};expect(function(){return guardarVehiculo(e)}).toThrow("Todos los campos del vehículo son obligatorios.")}),test("Debería eliminar un vehículo",function(){global.confirm=jest.fn(function(){return!0});var e="vehiculo123",a=eliminarVehiculo(e);expect(a).toEqual({id:e,mensaje:"Vehículo eliminado correctamente."})}),test("Debería editar una reserva y devolver sus datos",function(){var e=editarReserva("reserva1");expect(e).toHaveProperty("Nombre Completo","Juan Pérez"),expect(e).toHaveProperty("Email","juan.perez@example.com")}),test("Debería guardar una reserva correctamente",function(){var e=guardarReserva({"Nombre Completo":"Juan Pérez",Email:"juan.perez@example.com","Numero de Telefono":"12345678"});expect(e).toHaveProperty("mensaje","Reserva guardada correctamente.")}),test("Debería lanzar un error si faltan datos al guardar una reserva",function(){var e={"Nombre Completo":"Juan Pérez",Email:"juan.perez@example.com"};expect(function(){return guardarReserva(e)}).toThrow("Todos los campos son obligatorios.")}),test("Debería eliminar una reserva",function(){global.confirm=jest.fn(function(){return!0});var e="reserva123",a=eliminarReserva(e);expect(a).toEqual({id:e,mensaje:"Reserva eliminada correctamente."})}),test("Debería detectar solapamiento con una reserva existente",function(){var e=validarSolapamiento("vehiculo123",new Date("2025-04-03T09:00"),new Date("2025-04-04T09:00"));expect(e).toEqual({solapado:!0,mensaje:"Conflicto de reserva detectado."})}),test("No debería detectar solapamiento si las fechas no se cruzan",function(){var e=validarSolapamiento("vehiculo123",new Date("2025-04-07T09:00"),new Date("2025-04-08T09:00"));expect(e).toEqual({solapado:!1,mensaje:"No hay solapamiento de reservas."})}),test("No debería detectar solapamiento si el ID de vehículo no coincide",function(){var e=validarSolapamiento("vehiculo999",new Date("2025-04-03T09:00"),new Date("2025-04-04T09:00"));expect(e).toEqual({solapado:!1,mensaje:"No hay solapamiento de reservas."})}),test("Debería ignorar una reserva si es la misma que está siendo editada",function(){var e=validarSolapamiento("vehiculo123",new Date("2025-04-03T09:00"),new Date("2025-04-04T09:00"),"reserva1");expect(e).toEqual({solapado:!1,mensaje:"No hay solapamiento de reservas."})})});
//# sourceMappingURL=dashboard.test.min.js.map
