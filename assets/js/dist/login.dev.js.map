{"version":3,"sources":["login.js"],"names":["obtenerRol","uid","docRef","db","docSnap","exists","data","rol","document","getElementById","addEventListener","email","value","trim","password","auth","userCredential","user","console","log","alert","window","location","href","error","message","googleProvider","result","githubProvider","microsoftProvider","event","preventDefault","createdAt","Date"],"mappings":";;AAAA;;AAEA;;AAEA;AACA,SAAeA,UAAf,CAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,UAAAA,MADV,GACmB,4BAAIC,kBAAJ,EAAQ,UAAR,EAAoBF,GAApB,CADnB;AAAA;AAAA,0CAE0B,+BAAOC,MAAP,CAF1B;;AAAA;AAEUE,UAAAA,OAFV;;AAAA,eAIQA,OAAO,CAACC,MAAR,EAJR;AAAA;AAAA;AAAA;;AAKcC,UAAAA,IALd,GAKqBF,OAAO,CAACE,IAAR,EALrB;AAAA,2CAMeA,IAAI,CAACC,GAAL,IAAY,IAN3B;;AAAA;AAAA,2CAQe,IARf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAWA;;;AACAC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,gBAApC,CAAqD,OAArD,EAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AACpDC,UAAAA,KADoD,GAC5CH,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCG,KAAjC,CAAuCC,IAAvC,EAD4C;AAEpDC,UAAAA,QAFoD,GAEzCN,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCG,KAApC,CAA0CC,IAA1C,EAFyC;AAAA;AAAA;AAAA,0CAKzB,gDAA2BE,oBAA3B,EAAiCJ,KAAjC,EAAwCG,QAAxC,CALyB;;AAAA;AAKhDE,UAAAA,cALgD;AAMhDC,UAAAA,IANgD,GAMzCD,cAAc,CAACC,IAN0B;AAOtDC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,IAAI,CAACN,KAAzC;AAPsD;AAAA,0CASpCX,UAAU,CAACiB,IAAI,CAAChB,GAAN,CAT0B;;AAAA;AAShDM,UAAAA,GATgD;AAUtDW,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBZ,GAApB;;AAEA,cAAIA,GAAG,KAAK,OAAZ,EAAqB;AACjBa,YAAAA,KAAK,CAAC,0BAAD,CAAL;AACAC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,qBAAvB,CAFiB,CAE6B;AACjD,WAHD,MAGO,IAAIhB,GAAG,KAAK,MAAZ,EAAoB;AACvBa,YAAAA,KAAK,CAAC,0BAAD,CAAL;AACAC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;AAA+C,WAF5C,MAEkD,CACpD;;AAlBiD;AAAA;;AAAA;AAAA;AAAA;AAoBtDL,UAAAA,OAAO,CAACM,KAAR,CAAc,+BAAd,EAA+C,aAAMC,OAArD;AACAL,UAAAA,KAAK,CAAC,YAAY,aAAMK,OAAnB,CAAL;;AArBsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9D,E,CAyBA;;AACAjB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,gBAArC,CAAsD,OAAtD,EAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAElC,qCAAgBK,oBAAhB,EAAsBW,8BAAtB,CAFkC;;AAAA;AAEjDC,UAAAA,MAFiD;AAGvDT,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CQ,MAAM,CAACV,IAAtD;AACAG,UAAAA,KAAK,CAAC,qCAAD,CAAL;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;AALuD;AAAA;;AAAA;AAAA;AAAA;AAOvDL,UAAAA,OAAO,CAACM,KAAR,CAAc,mBAAd,EAAmC,aAAMC,OAAzC;;AAPuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/D,E,CAWA;;AACAjB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,gBAArC,CAAsD,OAAtD,EAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAElC,qCAAgBK,oBAAhB,EAAsBa,8BAAtB,CAFkC;;AAAA;AAEjDD,UAAAA,MAFiD;AAGvDT,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CQ,MAAM,CAACV,IAAtD;AACAG,UAAAA,KAAK,CAAC,qCAAD,CAAL;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;AALuD;AAAA;;AAAA;AAAA;AAAA;AAOvDL,UAAAA,OAAO,CAACM,KAAR,CAAc,mBAAd,EAAmC,aAAMC,OAAzC;;AAPuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/D,E,CAWA;;AACAjB,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,gBAAxC,CAAyD,OAAzD,EAAkE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAErC,qCAAgBK,oBAAhB,EAAsBc,iCAAtB,CAFqC;;AAAA;AAEpDF,UAAAA,MAFoD;AAG1DT,UAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDQ,MAAM,CAACV,IAAzD;AACAG,UAAAA,KAAK,CAAC,wCAAD,CAAL;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,cAAvB;AAL0D;AAAA;;AAAA;AAAA;AAAA;AAO1DL,UAAAA,OAAO,CAACM,KAAR,CAAc,sBAAd,EAAsC,aAAMC,OAA5C;;AAP0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlE,E,CAWA;;AACAjB,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,gBAAzC,CAA0D,OAA1D,EAAmE,kBAAOoB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/DA,UAAAA,KAAK,CAACC,cAAN;AAEMpB,UAAAA,KAHyD,GAGjDH,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCG,KAAjC,CAAuCC,IAAvC,EAHiD;AAIzDC,UAAAA,QAJyD,GAI9CN,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCG,KAApC,CAA0CC,IAA1C,EAJ8C;;AAAA,gBAM3DF,KAAK,KAAK,EAAV,IAAgBG,QAAQ,KAAK,EAN8B;AAAA;AAAA;AAAA;;AAO3DM,UAAAA,KAAK,CAAC,gDAAD,CAAL;AAP2D;;AAAA;AAAA;AAAA;AAAA,0CAY9B,oDAA+BL,oBAA/B,EAAqCJ,KAArC,EAA4CG,QAA5C,CAZ8B;;AAAA;AAYrDE,UAAAA,cAZqD;AAarDC,UAAAA,IAbqD,GAa9CD,cAAc,CAACC,IAb+B,EAe3D;;AAf2D;AAAA;AAAA,0CAiBjD,+BAAO,4BAAId,kBAAJ,EAAQ,UAAR,EAAoBc,IAAI,CAAChB,GAAzB,CAAP,EAAsC;AAC1CU,YAAAA,KAAK,EAAEM,IAAI,CAACN,KAD8B;AAE1CJ,YAAAA,GAAG,EAAE,MAFqC;AAG1CN,YAAAA,GAAG,EAAEgB,IAAI,CAAChB,GAHgC;AAI1C+B,YAAAA,SAAS,EAAE,IAAIC,IAAJ;AAJ+B,WAAtC,CAjBiD;;AAAA;AAwBvDf,UAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AAxBuD;AAAA;;AAAA;AAAA;AAAA;AA2BvDD,UAAAA,OAAO,CAACM,KAAR,CAAc,gCAAd,EAAgD,aAAMC,OAAtD;;AA3BuD;AA8BzDL,UAAAA,KAAK,CAAC,mCAAmCH,IAAI,CAACN,KAAzC,CAAL;AA9ByD;AAAA;;AAAA;AAAA;AAAA;AAgCzDO,UAAAA,OAAO,CAACM,KAAR,CAAc,uBAAd,EAAuC,aAAMC,OAA7C;AACAL,UAAAA,KAAK,CAAC,YAAY,aAAMK,OAAnB,CAAL;;AAjCyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnE","sourcesContent":["import { auth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signInWithPopup, googleProvider, githubProvider, microsoftProvider } from \"./firebaseConfig.js\";\r\nimport { db } from \"./firebaseConfig.js\";\r\nimport { doc, setDoc, getDoc } from \"https://www.gstatic.com/firebasejs/10.9.0/firebase-firestore.js\";\r\n\r\n// Obtener el rol de un usuario\r\nasync function obtenerRol(uid) {\r\n    const docRef = doc(db, \"usuarios\", uid);\r\n    const docSnap = await getDoc(docRef);\r\n\r\n    if (docSnap.exists()) {\r\n        const data = docSnap.data();\r\n        return data.rol || null;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n// Inicio de sesión con correo\r\ndocument.getElementById(\"btnLogin\").addEventListener(\"click\", async function () {\r\n    const email = document.getElementById(\"email\").value.trim();\r\n    const password = document.getElementById(\"password\").value.trim();\r\n\r\n    try {\r\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n        console.log(\"Usuario autenticado:\", user.email);\r\n\r\n        const rol = await obtenerRol(user.uid);\r\n        console.log(\"Rol:\", rol);\r\n\r\n        if (rol === \"admin\") {\r\n            alert(\"Bienvenido administrador\");\r\n            window.location.href = \"dashboardAdmin.html\"; // redirige al panel admin\r\n        } else if (rol === \"user\") {\r\n            alert(\"Inicio de sesión exitoso\");\r\n            window.location.href = \"index-2.html\";        } else {\r\n            }\r\n    } catch (error) {\r\n        console.error(\"Error en el inicio de sesión:\", error.message);\r\n        alert(\"Error: \" + error.message);\r\n    }\r\n});\r\n\r\n// Inicio de sesión con Google\r\ndocument.getElementById(\"btnGoogle\").addEventListener(\"click\", async function () {\r\n    try {\r\n        const result = await signInWithPopup(auth, googleProvider);\r\n        console.log(\"Usuario autenticado con Google:\", result.user);\r\n        alert(\"Inicio de sesión con Google exitoso\");\r\n        window.location.href = \"index-2.html\";\r\n    } catch (error) {\r\n        console.error(\"Error con Google:\", error.message);\r\n    }\r\n});\r\n\r\n// Inicio de sesión con GitHub\r\ndocument.getElementById(\"btnGitHub\").addEventListener(\"click\", async function () {\r\n    try {\r\n        const result = await signInWithPopup(auth, githubProvider);\r\n        console.log(\"Usuario autenticado con GitHub:\", result.user);\r\n        alert(\"Inicio de sesión con GitHub exitoso\");\r\n        window.location.href = \"index-2.html\";\r\n    } catch (error) {\r\n        console.error(\"Error con GitHub:\", error.message);\r\n    }\r\n});\r\n\r\n// Inicio de sesión con Microsoft\r\ndocument.getElementById(\"btnMicrosoft\").addEventListener(\"click\", async function () {\r\n    try {\r\n        const result = await signInWithPopup(auth, microsoftProvider);\r\n        console.log(\"Usuario autenticado con Microsoft:\", result.user);\r\n        alert(\"Inicio de sesión con Microsoft exitoso\");\r\n        window.location.href = \"index-2.html\";\r\n    } catch (error) {\r\n        console.error(\"Error con Microsoft:\", error.message);\r\n    }\r\n});\r\n\r\n// Registro de usuario con correo\r\ndocument.getElementById(\"registerEmail\").addEventListener(\"click\", async (event) => {\r\n    event.preventDefault();\r\n\r\n    const email = document.getElementById(\"email\").value.trim();\r\n    const password = document.getElementById(\"password\").value.trim();\r\n\r\n    if (email === \"\" || password === \"\") {\r\n        alert(\"Por favor, ingresa un correo y una contraseña.\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = userCredential.user;\r\n\r\n        // Guardar rol en Firestore\r\n        try {\r\n            await setDoc(doc(db, \"usuarios\", user.uid), {\r\n              email: user.email,\r\n              rol: \"user\",\r\n              uid: user.uid,\r\n              createdAt: new Date()\r\n            });\r\n        \r\n            console.log(\"Usuario guardado correctamente en Firestore\");\r\n        \r\n          } catch (error) {\r\n            console.error(\"Error al guardar en Firestore:\", error.message);\r\n          }\r\n        \r\n          alert(\"Registro exitoso. Bienvenido, \" + user.email);\r\n        } catch (error) {\r\n          console.error(\"Error en el registro:\", error.message);\r\n          alert(\"Error: \" + error.message);\r\n        }\r\n\r\n\r\n\r\n        \r\n});\r\n"],"file":"login.dev.js"}